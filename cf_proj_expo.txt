f(x) = a + b(exp(-cx));

x -> Estimated rating (Rounded, e.g 1632 -> 1600)

Final rating (to be used for calc) = x + f(x)

x belongs to [800, 3500]

// Divide the ratings by 100, use f(x), and multiply by 100 again
--------------------------------------------------------------------------
1) EASY: [lower_bound, upper_bound]

	800			 1200			 1600		    1900	 	   2300	 

 [0, 200]	  [-100, 100] 	   [-200, 0]	[-300, -100]	[-600, -300]


  	2600	 		 3000	  			3500

  [-600, -400]	   [-800, -400]		[-800, -600]
--------------------------------------------------------------------------
2) MEDIUM: [lower_bound, upper_bound]

	800			 1200			 1600		    1900	 	   2300	 

 [300, 400]	  [200, 300] 	  [100, 200]	  [0, 200]		[-200, 0]


  	2600	 		 3000	  			3500

  [-300, 0]	      [-300, -100]		[-500, -400]
--------------------------------------------------------------------------
3) HARD: [lower_bound, upper_bound]

	800			 1200			 1600		    1900	 	   2300	 

 [500, 700]	  [400, 600] 	  [300, 500]	  [300, 500]	  [100, 300]


  	2600	 		 3000	  			3500

  [100, 300]	   [0, 300]			 [-300, 100]

--------------------------------------------------------------------------

FINAL FUNCTIONS

1) f_low_easy(x) = -21.2 + (25.5 * exp(-0.02 * x));

2) f_high_easy(x) = -32.1 + (37.2 * exp(-0.01 * x));

3) f_low_med(x) = -38.8 + (44.8 * exp(-0.008 * x));

4) f_high_med(x) = -53.2 + (59.9 * exp(-0.005 * x));

5) f_low_hard(x) = -32.0 + (39.9 * exp(-0.008 * x));

6) f_high_hard(x) = -30.8 + (39.6 * exp(-0.006 * x));

--------------------------------------------------------------------------

CODE

#include <bits/stdc++.h>
 
using namespace std;

#define IOS ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);
#define pb push_back
#define mk make_pair

typedef long long ll;
typedef long double ld;

ld f(int x, ld a, ld b, ld c){
    ld res = a + (b * (exp(c * x * -1.0)) * 1.0);
    return res;
}

void solve(){
    cout << fixed << setprecision(8);
    vector<int> x, y;
    int n;
    cin >> n;
    for(int i = 0; i < n; i++){
        int xi, yi;
        cin >> xi >> yi;
        x.pb(xi);
        y.pb(yi);
    }
    ld diff = 1e10, a_res = 0, b_res = 0, c_res = 0;
    for(ld a = -40; a <= 40; a += 0.1){
        for(ld b = -40; b <= 40; b += 0.1){
            for(ld c = 0.001; c <= 0.02; c += 0.001){
                ld temp = 0.0;
                for(int i = 0; i < 8; i++){
                    temp += (f(x[i], a, b, c) - y[i]) * (f(x[i], a, b, c) - y[i]);
                }
                if(temp < diff){
                    diff = temp;
                    a_res = a;
                    b_res = b;
                    c_res = c;
                }
            }
        }
    }
    for(int i = 0; i < 8; i++){
        cout << y[i] << " " << f(x[i], a_res, b_res, c_res) << "\n";
    }
    cout << "\n";
    cout << a_res << " " << b_res << " " << c_res << "\n";

    return;
}

int main(){
    IOS;
    int t = 1;
    // cin >> t;
    for(int i = 1; i <= t; i++){
        solve();
    }
    return 0;
}

--------------------------------------------------------------------------